1. INTODUCTION TO ONLINE -> CICS
2. SCREEN COMMUNCIATION
	1. DESIGN A BMS MAP
	2. COMPILE => SETUP -> EXECUTE THE MAP -> SEE THE DESIGN
	3. COBOL+CICS PGM
	4. COMPILE -> SETUP -> EXECUTE THE TRAN -> SEE PROCESS		4 CLASS =. 90% THOERY - 10%

3. SCREEN -> SCREEN NAVIGATION		--> 1 SESSION -> U NEED TO ATTEND THESE CLASSES.
4. DATA COMMUNCATION
	1. DB2 TABLE	-> COBOL + CICS + DB2 PGM (MAINPGM-SUBPGM)		-- TAINING RECORD/ YOUTUBE CHANNEL
	2. VSAM KSDS 	-> COBOL + CICS + KSDS FILE				-- SAME OVER HERE
	3. QUEUE	-> COBOL + CICS + DB2 + TSQ	-- LAST PGM		-->NOT ANY PLACE
			-->  COBOL + CICS + TDQ

5. HANDLE ERROR  -> OTHER POINT -
		
=========================================================================	
CLASS 03:

2. SCREEN COMMUNCIATION
	1. DESIGN A BMS MAP
	2. COMPILE => SETUP -> EXECUTE THE MAP -> SEE THE DESIGN
	3. COBOL+CICS PGM
	4. COMPILE -> SETUP -> EXECUTE THE TRAN -> SEE PROCESS

>> DESIGN A BMS MAP
			1. MAPSET
			2. MAP
			3. FILEDS	-> 1 LABEL FILEDS , 2. DATA VALUE  (USERID: _____ )

	MARCO 		1. DFHMSD  --> MAPSET
			2. DFHMDI	MAP
			3. DFHMDF	FIELDS

	BMS PGM 	-> COMPILATION 		2 OUTPUT	1. PHYSICAL MAP --> LOAD
								2. SYMBOLIC MAP --> COPYBOOK

	ONCE U HAVE THE LOAD -.>  CICS ENV -. PPT  -> CEDA DEF MAPSET() - CEDA INS MAPSET()
	TO SEE THE SCREEN:
			
			1. MANUALLY	-> CECI SEND MAP() MAPSET()
			2. PGM		-> EXEC CICS SEND MAP() MAPSET().. END-EXEC

CODE THE BMS PGM:

MAPSETNAME	DFHMSD	TYPE=&SYSPARM,LANG=COBOL,MODE=INOUT,			X
			TERM=ALL,STORAGE=AUTO,MAPATTS=(COLOR),			X
			TIOAPFX=YES,CTRL=(FREEKB,FRSET)
MAPNAME		DFHMDI	SIZE=(24,80),LINE=1,COLUMN=1		



FLD-NAME	DFHMDF	PARAMETER:

	>> FLD-NAME	-> WE NEED TO PROVIDE FLD NAME ONLY TO THE DATA VALUE FIELDS 
			-> WE SHOULD NOT PROVIDE A FLD NAME TO LABEL FIELDS.

1. POS=(LL,COL)

		USERID: ______ ' '

	USERID -> POS=(10,30),LENGTH=7,INITIAL='USERID:',
	______ -> POS=(10,38),LENGTH=4,INITIAL='____'
	 " "	> POS=(10,43),LENGTH=1,INITIAL=' '

30 31 32 33 34 35 36 37 38 39 40 41 42 43
 U  S  E  R  I  D  :    _  _  _  _     ' '

		1 BYTE ATTRIBUTE ** -- FIELD ATTRIBUTE -> THIS NEED TO BE PREFIXED TO EACH FIELD ON THE SCREEN

			&USERID:&______&' '    & -> 1 BYTE ATTRIBUTE
		IF U MISS THIS POINT AND DESING THE SCREEN -> IMPROPER POSITION => ERROR -> OVERLAPPING.

ATTRB=()
		1. PROT/UNPROT/ASKIP
				PROT -> CANNOT EDIT THE FIELDS --> LABEL FILEDS & OUTPUT DATA FIEDLS
				UNPROT -> FOR THE FILED - TO EDIT --> INPUT FIELDS
				---
				ASKIP -> AUTO SKIP -> SKIPPER -- USED TO MOVE/POSITION THE CURSOR TO NEXT UN-PROTECTED FIELDS

				STOPPER -> PROT
				SKIPPER -> ASKIP

		2. VISIBILITY -> 	
					NORM -  ALL DATA FILED
					BRT  - HEADING -> WHITE
					DRK	-> HIDDEN FILED - PASSWORD

		3. IC -> *** - INSERT CURSOR   (CURSOR POSITIONING TECQ)
				1.STATIC C-POS

						BY DEFAULT -> BLACK SCREEN
						BY DEFAULT -> CURSOR WIL BE ALLWAYS PLACE TO LEFT TOP CORNER
				WHEN WE SEND A MAP -> CUROSR NEED TO BE POSITIONED ON THE INPUT FILEDS

			IC IS USED ONLY TO FIRST DATA FILEDS - PLACE THE CURSOR AND RECEVIE THE INPUT.
				-- WHAT IF I USE IC ALL FIELDS -> CUROSR WIL BE BLIKING ON LAST FIELDS

		4. NUM ->  TO ALLOW ONLY NUMEIRC
			IF UR NOT USING - NUM ->  NUM1: 111_  -- IN THE PGM - STRING HANDLING -> 111_ --> 0111

		5. FSET -. FIELD SET - 	SOME TIME WE MAY NEED A FILED TO BE RECEVIED ALWAYS

				CICS -> CAN ONLY RECEIE A FILED DATA WHEN IT IS SET.
					--> A FIELD CAN BE SET ->
								1. WHEN USER EDITS IT
								2. DESIGN THE FILED -> ATTRB=(FSET)
ATTRB=(PROT,NORM) , PROT,BRT
ATTRB=(UNPROT,NORM)
	UNPROT,DRK
	UNPROT,NORM,IC
	UNPROT,NORM,IC,NUM
	UNPROT,NORM,FSET











 		













 
MAPNAME		DFHMDI	SIZE=(LL,CL),LINE=1,COLUMN=1,CTRL=()


	CICS SCREEN ->  24 LINE , 80 COL	SIZE=(24,80)

		1 MAP -> SIZE=(24,80),LINE=1,COLUMN=1
		--
		2 MAP -> SIZE=(04,80),LINE=1,COLUMN=1
			 SIZE=(20,80),LINE=5,COLUMN=1

	CTRL ==> CAN BE USED ONLY ONCE -> EITHER U CODE ON MAPSET OR ON MAP NOT BOTH

	
FRSET -> FIELD RESET 
		1. WHENEVER WE SEND ANY MAP -> WE NEED TO RESET ALL FILEDS
		2. USER WHEN EDITS ANY FILED -> IT WIL BE SET (FSET)
		3. CICS - CAN ONLY RECEVIE THE FIELDS WHICH ARE SET.

IN CASE IF I HAVE A SCREEN => 80 FILEDS -> 1 INPUT FILED -> HOW THE SYSTEM CAN KNOW TO RECEVIE ONLY 1 FIELDS 
	
	FRSET - FSET -> MDT MODIFIED DATA TAG (ON or OFF)






















	



CLASS -02: 

BMS CODING:

MAPSET-NAME 	DFHMSD	PARAMETER:

1. MAPSET NAME ->   1-7 CHAR ONLY  -> WHILE EXEUTING ON THE TERMINAL -> PLACE 8TH CHAR -> TYPE.
			--> DEVICE INDEPENDENT


TYPE ->   - CONTROL THE OUTPUT OF THE COMPILER

		TYPE=MAP	--> COMPILER -> CREATE ONLY PHY MAP (LOAD)
		TYPE=DSECT	--> COMPILER -> CREATE ONLY SYM MAP (COPYBOOK)
		TYPE=&SYSPARM	--> COMPILER -> FOR BOTH - SYM + PHY
		TYPE=FINAL		--> END OF THE MAPSET

LANG-->  USED TO TELL IN WHICH LANG - COPYBOOK TO BE CREATED..

	COBOL-CICS -> LANG=COBOL
	PLI - CICS -> LANG=PLI
	ASM	  -> LANG=ASM >  COBOL

MODE=INOUT
		IN	-> ONLY FOR INPUT -> GET THE DATA TO THE PGM
		OUT	> ONLY FOR OUTPUT ->, ONLY SEND THE DATA TO SCREEN
		INOUT	--> BOTH

TERM-ALL , STORAGE=AUTO , MAPATTS=COLOR  DEATTS=COLOR   -> USE IT COPY-PASTE

TIOAPFX=YES -->    BY DEFAULT =YES -

		ALONG WITH UR DATA FILED -> U NEED ADDITIONAL MEMORY FOR TERMINA I/O PROCESS
			TERMINAL INPUT OUTPUT AREA PREFIX -= TIOAPFX=YES -> COMPILER 0 ADD -> 12 BYTES OF FILLER VARIABLE

		12 BYTE OF FILLER VARIABLE -> 1ST VARIABLE IN THE COPYBOOK 

 TIOAPFX=NO -> NO MEMORY ALLOCATION./.
		0> WE CANNOT DO ANY TERMINAL INTERACTION


CTRL=(FREEKB,FRSET)

	FREEKB -> FREE THE KEYBOARD.
		-> CICS -WHEN RECEVIES ANY INPUT -> IT WIL LOCK THE KEYBOARD
		--> WHEN AM SENDING THE MAP AS RESULT -> THE KEYBOARD SHOULD BE FREE FOR INPUTS..

	IF U DONT USE FREEKB -> -- X SYSTEM -  LOCK THE TERMINAL

	FRSET -> FIELD RESET..

	ON A MAP -> I HAVE 80 FIELDS --> USER PROVIDED INPUT -> 1 FILEDS  -> PRESS ENTER.

			UR -PGM		1. RECEVIE ALL 80 FILED DATA
					2. RECEVIE ONLY 1 FIELD DATA

	HOW THE CICS PGM KNOWS WHICH FILED TO RECEVIE...

		1. SEND THE MAP -> RESET FIELDS ->	MDT OFF (0)	(MODFIED DATA TAG)
		2. USER EDITS THE FILED -> FSET		MDT ON  (1)
		3. CICS ALWAYS - RECEVIES ONLY THE FILED -WHICH ARE SET (MDT ON)

	NOTE:  IN CASE USER -DO NOT EDIT ANY FIELDS -> ENTER ->  RECEIVE NOTHING  --> COMMAND FAIL -> MAPFAIL**
			ANY TIME U GET ANY ERROR IN CICS COMMAND -> SYSTEM ABEND THE PROCESS. IF U DONT HANDLE THE CICS ERROR.

MSETNAME DFHMDF TYPE=&SYSPARM,LANG=COBOL,MODE=INOUT,			X
		TERM=ALL,STORAGE=AUTO,MAPATTS=(COLOR),			X
		TIOAPFX=YES,CTRL=(FREEKB,FRSET)














































INTRO OF CICS:

	CICS -> INTERFACE B/W APPLICATION PGM (COMMAND) -> DATA
	CICS -. IS MIN OPERATING SYSTEM
		
		3 MAIN COMPONENTS:
				1. CONTROL PROGRAM	-- TASK CARRIER
				2. CONTROL TABLE***    --> CONTAIN THE REQUIRED COMPOENT DETAILS -> DEVELOPER TASK
				3. CONTROL AREA		--> AUTO - SYSTEM WIL TAKE -SPACE ALLOCATION FOR THE PROCESS.

	IF AM THE COBOL-CICS PGM-> I WANT TO GET SOME DATA FROM A SCREEN.

		COMMAND THE CICS -> TO GET THE DATA FILE -> 1. CONTROL PROGRAM -> TASK CARRIER  (CORIRE BOYS) -- 
							    2. CONTROL TABLE -> REQUIRE INFORMATION 0-UR COMPOENT DETAIL NEED TO BE SET 
							    3.  CONTROL AREA -> SPACE REQUIRED TO DO THE TASK

1. SCREEN DESIGN:

	BMS => LANG	-- BASIC MAPPING SUPPORT (MODULE ASM LANG)

	TO DO THE DESING -> 3 COMPONENT

			1. MAPSET	-- COLLECTION OF 1 OR MORE MAP
			2. MAP		--> COLLECTION OF 1 OR MORE FIELDS
			3. FIELDS	--> ELEMENT THAT WE SEE ON THE SCREEN.
				2 TYPES;
					1. LABEL FILEDS		-- USERID (NON-EDITABLE)
					2. DATA VALUE FIELD	-- _____

			USERID: _____	


	TO DEFINE THESE 3 COMPONENT -> WE USE 3 ASM MACRO

		DFHMSD  --> MAPSET DEFINATION -> DEFINE THE MAPSET
		DFHMDI  --> MAP DEFIANTION INTERFACE -> DEFINE THE MAP
		DFHMDF  --> MAP DEFIANTION FIELDS --> DEFINE THE FIELDS

- BMS CODE SHEET -

MAPSET-NAME  DFHMSD	PARAMETER1,PARAMETER2,....	X(72)
			PARA3,PARA4

MAP-NAME     DFHMDI	PARAMETER...

FLDNAME	     DFHMDF	PARAMETER
FLDNAME	     DFHMDF	PARAMETER
FLDNAME	     DFHMDF	PARAMETER
FLDNAME	     DFHMDF	PARAMETER

MAP-NAME     DFHMDI	PARAMETER...

FLDNAME	     DFHMDF	PARAMETER
FLDNAME	     DFHMDF	PARAMETER
FLDNAME	     DFHMDF	PARAMETER
FLDNAME	     DFHMDF	PARAMETER

	     DFHMSD	TYPE=FINAL		END OF MAPSET
	     END			END OF THE BMS PGM


BMS PGM - READY ->  COMPILATION

		ASM COMPILER -> ASMA90**  ->  INPUT - BMS PGM
						OUTPUT -> 	1. PHYSICAL MAP  --> LOAD MODULE
								2. SYMBOLIC MAP  --> COPYBOOK OF THE SCEEN

	FILE COPYBOOK		-- U CREATED MANUALLY
	TABLE COPYBOOK		-- USED DCLGEN TOOL
	SCREEN/MAP COPYBOOK   ---- CREATE BY THE COMPILER	--> SYMBOLIC MAP    << PGM ->  SYM-MAP -> SCREEN  >>
====

TO SETUP & EXECUTE -> 

		SETUP ->  LOAD -> PROGRAM PROCESSING TABLE -> PPT -> CONTROL TABLE

				CEDA DEF MAPSET(NAME) G(APP-GRP)
				CEDA INS MAPSET(NAME) G(APP-GRP) -> PPT  (LIKE UR STEPLIB)

		EXECUTION	
				1. CECI -> MANUALLY	-  CECI SEND MAP(NAME) MAPSET(NAME) -> ENTER - 2 TIMES
				2. PGM  -> AUTOMATIC	-  EXEC CICS SEND MAP() MAPSET() .. END-EXEC.

============================================================================================================================

CICS CLASS 01:


MAINFRAME ->  	1. STORE THE DATA			1. FILE SYSTEM 	2. DATABASE
								PS 		DB2

		2. PROCESS THE DATA		1. BATCH SYSTEM		2. ONLINE SYSTEM


BATCH -> JCL	1. BULK DATA PROCESS 2. SCHDUDLER  3. WITHOUT USER INTERACTION  4. THRU JCL
ONLINE -> CICS  1. SHORT INFORMATION  2. UNSCHDULE  3. WITH USER INTETRACTION  4. THRU CICS.

	MAINFRAME APPLICATION -> ONLINE ->	1. CICS
						2. IMS-DC

ONLINE SYSTEM -> QUICK ACCESS TO DATA>

			CLIENT
			  |
		IT  --	DATA	--	BUSINESS-USER
			  |
			CUSTOMER

	I WANT TO SEE ANY DATA IN A DB2 TABLE:
										BUSINESS USER				CUSTOMER 
			1. LOGIN MAINFRAME 						DO THIS				NO
			2. ISPF -> DB2I SCREEN						DO THIS
			3. OPTION SPUFI -> CREATE DATASET-INPUT /OUTPUT			MAY BE
			4. EDIT THE DATASET - CODE A SQL QUERY -> EXECUTE		I CANNOT
			5. SEE THE DATA IN SPUFI OUTPUT FILE				I CANOT


ONLINE APPLICATION ->   USER FRONT SYSTEM		--> INTERNAL PROJECT PERSON -> MAINFRAME
			CUSTOMER FRINT SYSTEM		--> EXTERNAL  PERSON 	-> NOT INTO MAINFRAME

	
USER FRONT SYSTEM -->   SCREEN (CICS)  -> INPUT-TRIGGER -> PROCESS - PGM ->  TABLE/FILE -DATA


CUSTOMER FRONT SYSTEM -.  JAVA/.NET (SCREEN) - INPUT - TRIGGER -> WEB SERIVICES  --> TIRGR THE CICS TRAN ->  CICS -PGM ->   DATA
						|__________________________________MQ SERIES (MESSAGE QUEUE) ---|	


	PROJECT ->  100 APPLICATION ONLINE  ->  PERCENT OF HAVING -> CUSTOMER vs USER

			80%	- USER
			20%	- CUSTOMER

		100 ONLINE APPLICATRION  	100 - CICS  + 20 CUSTOMER 

OUR TRAINING -> USER FRONT SYSTEM:

	CICS ->  CUSTOMER INFORMATION AND CONTROL SYSTEM

		CICS -> DB/DC SYSTEM		DB -> DATA BASE -> STORE THE DATA
						DC -> DATA COMMUNICAITON -> PASS THE DATA 

		IN OUR PROJECT -> WE USE ONLY CICS -> DC -> DATA COMMUNCATION ONLY


	CICS -  INTERFACE B/W APPLICAITON PGM -> DATA SOURCE
			IN BATCH -> PGM =EXECUTING IN Z/OS
			IN ONLINRE -> PGM -.EXECUTED BY CICS


		PGM ---> CICS  --> DATA/(FILE-DB2)
		 |-------CICS------------|



























