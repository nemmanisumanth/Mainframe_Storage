1. INTRODUCTION TO DB2 / SQL
2. HOW TO COBOL-DB2 PGMS
	1. CREATE A TABLE
	2. DCLGEN COPYBOOK
	3. COBOL-DB2 PGM
	4. PRE-COMPILATION***
	5. EXECUTION
3. COBOL-DB2 PROGRAM
	1. INSERT
	2. SELECT  + CURSOR  - 305
	3. UPDATE
4. LOAD & UNLOAD
5. SQLCODE ERROR CODE
6. SQL SELECT QUERY + VIEW _ JOIN - SUB QUERY
=======================================================10-12 SESSION
2. HOW TO COBOL-DB2 PGMS
	1. CREATE A TABLE
	2. DCLGEN COPYBOOK
	3. COBOL-DB2 PGM
	4. PRE-COMPILATION***
	5. EXECUTION


CREATE THE TABLE:

	CREATE TABLE SCHEMA.TABLENAME(
	COL-NAME	DATA-TYPE	CONSTREAINTS,
	COL-NAME	DATA-TYPE	CONSTREAINTS,
	COL-NAME	DATA-TYPE	CONSTREAINTS,
	COL-NAME	DATA-TYPE	CONSTREAINTS)	IN DATABASE.TABLESPACE;



DATA -TYPE
		DB2 TYPES								COBOL DATA-TYPES

	CHAR(N)		 FIXED BYTES							PIC  X(N)
	VARCHAR(N)	 VARYING BYTES						03 GRP1.
										  49  LEN  PIC  S9(04) COMP.
		CHAR(10)  -> ANIL 		- 10 BYTES			  49  TEXT PIC  X(N).
				SUNIL		- 10 BYTES

		VARCHAR(10) ->  ANIL		- 4 BYTES
				SUNIL		- 5 BYTES


	SMALLINT	FIXED 2 BYTE BINARY						03 A	PIC S9(4) COMP.
	INTERGER	FIXED 4 BYTE BINARY						03 B	PIC S9(09) COMP.

	DECIMAL(P,Q)	P - TOTAL DIGITS , Q-DECIMAL DIGITS

		EX:  123.45	DECIMAL(5,2)						03 C PIC  S9(03)V9(02) COMP-3.


	DATE		= 	YYYY-MM-DD						X(10)
	TIME			HH.MM.SS						X(08)
	TIMESTAMP		YYYY-MM-DD-HH.MM.SS.MMMMMM				X(26)


DB2 CONSTRAINTS:

RULES THAT ARE IMPOSED ON A COLUMN OF THE TABLE TO AVOID INCORRECT/INVALID DATA INTO THE TABLES..

	TABLE:	CLAIM_TAB	

INSERT				CLAIM_NUBER 	CUSTN_NAME 	CLAIM_AMOUNT 	CLAIM_SUBMIT_DATE
R1 123,ANIL,1000,2021-09-09		123	ANIL		1000		2021-09-09
R2 123,ARUN,MISS,2021-09-09		124	ARUN		---------NULL	2021-09-09
R3					125	SUNIL		0000		2021-09-09
					123			1093		2021-09-09


		IN DB2 NULL ARE REPRESTED BY ----------
		NULL -- NOTHING  (NOT SPACE , NOT ZERO)


	1. NOT NULL		= THIS IS USED TO AVOID NULL VALUE ON A COLUMN.==> MANDARORY COL , REQUIRED COL =IF U MISS -ERROR
	2. WITH DEFAULT		= THIS IS USED TO AVOID NULL VALUE ON A COLUMN ==> OPTIONAL COL - SYSTEM WIL PLACE DEFAULT VALUE IF U MISS
	
		CLAIM_SUB_DT	CLAIM_SUB_DT(NOT NULL)		CLAIM_SUB_DT(WITH DEFAULT)	CLAIM_SUB_DT(WITH DEFAULT 2099-01-01)
2021-09-09	2021-09-09	2021-09-09			2021-09-09			2021-09-09
MISS		----------	ERROR				2021-09-28			2099-01-01

					WITH DEFAULT -. BASED ON DATA-TYPES
							NUM - SMALLINT/INTER/DECIMAL ==>00000
							AL-NUM -> CHAR/VARCHAR	===.	 SPACE.
							DATE/TIME/TIMESTAMP  -->  CURRENT DATE/TIME/TIMESTAMP

	
	IN A GIVEN ANY TABLE -> APART FROM THE DATA VCOLUMNS

		1. CREATE-TS 			WITH DEFAULT
		2. UPDATE-TS			WITH DEFAULT
		3. TOKEN/LAST-UPDATE		CONTAINS WHICH PROCES/USER/JOB UPDATED THE RECORD.



	3. UNIQUE		-- USED TO AVOID THE DUPLICATE ON A COLUMN
					-- THIS SHOULD BE NOT NULL AS WELL
				--> ON A TABLE WE CAN HAVE MANY UNIQUE CONST ON THE COLUMN

	4. PRIMARY KEY		-- USED TO AVOID THE DUPLICATE ON A COLUMN
					-- THIS SHOULD BE NOT NULL AS WELL
				-->  ON A TABLE WE CAN HAVE ONE PRIMARY KEY
				--> THIS PK COLUMN CAN BE USED FOR RELATION-SHIP  (PARENT-CHILD)


				"COL-NAME  DATA-TYPE  NOT NULL PRIMARY KEY."

>> CAN A TABLE IDENIFY THE DUPLICATES ON A COLUMN IN A TABLE??  
>> ONLY INDEX CAN FIND DUPLICATES**

		ON A GIVEN TABLE IF U HAVE ANY COLUMN , PK , UNQ  WE MUST BE DEFINING A INDEX ON THE COLUMN.

>> WE CAN HAVE A INDEX ON ANY COLUMN
		-> INDEX		== THIS CAN HAVE DUPLICATE	== USED FOR SEARCH/QUERY FASTER
		-> UNIQUE INDEX		== THIS WILL NOT ALLOW DUPLICATE  --> UNIQUE,PRIMARY KEY

	TOO MANY INDEX ON A TABLE - WIL ALSO CAUSE PERFOMANCE ISSUE



	5. FORIGEN KEY	--> THIS COL USED TO SETUP A RELATION WITH THE PARENT TABLE
			-- THE COL OF PARENT - PK 
			-- WIL BE THE SAME COL IN CHILD - FK

		 PRODUCT TABLE(PARENT)		ORDER TABLE(CHILD TABLE)
		PID,PNAME,PPRICE		OID,PID,QTY,AMOUNT,ADV-AMOUNT
		P1,LAPTOP,10			O1,P4,1000,10000,5000
		P2,KEYBOARD,20			O1,P4,10000,100000,50000
		P3,MOUSE,30			O3,P4,20000,1000000,500000	=== INSERT RULE ERROR
		P4,LAPTOP2.0,20
			
			2 NEW RULES:
				INSERT>>	1. WE CANNOT HAVE ANY CHILD ROW WITHOUT A PARENT
	 			DELETE>>	1. IN CASE TO DELETE A PARENT
							WHAT HAPPEN TO A CHILD
						
					ON DELETE CASCADE :  ALONG WITH PARENT ROW, CHILD ROW WIL BE DELETED AS WELL
					**ON DELETE RESETICT : IF WONT ALLOW THE DELETE OF PARENT ROW , IF A CHILD IS PRESENT
									--> SOL :  TO DELETE THE CHILD ROW FST AND REMOVE THE PARENT


	6. CHECK	--> IF CONDITION -- PRACTICAL'S 





COBOL + IF, PERFORM , MOVE , FILE , SUB-PROGRAM


INTRODUDCTION TO DB2:


	MAINFRAME - IS USED TO STORE & PROCESS THE DATA

		PROCESSING -> BATCH -- ONLINE  ->  COBOL + JCL
		STORING  ---> FILE  & DATABASE  -> FILE 

		DATABASE --> 		1. IDMS	-- OLDEST , FEW PROJECT
					2. IMS  --  OLD	--> MANY PROJECT
					3. DB2  --  NEW --- ALL PROJECT

	DB2 IS IBM 2ND DATABASE PRODCUT 
	IBM 1ST DATABASE -> IMS**

DB2 -- SOFTWARE - WHICH MANAGES THE DATA STORE & RETRIVE METHOD

DB2 INSTALL:	= SYSTEM PROGRAMMER

	THEY WIL INSTALL MULTIPLE COPIES FOR EACH OF THE TSO (LPAR)

LOGIN TO MAINFRAME		1. TSO		PROD		- INSTALL	-- SUB-SYSTEM ID	- SSID	- 4 CHAR -> DBP1
				2. TSO		TEST/DEV	- INSTALL
				3. TSO		QUAL		- INSTALL


	PROD - TEST - QUAL - ALL SAME TABLE == DATA WIL BE NOT SAME

	WHEN U JOIN ANY PROJECT:	
					1. TOOLS 
					2. LIB -- COBOL , JCL , PROC , CONTROL , COPYBOOK
					3. PROD , TEST = ENV
					4. DB2
						1. SSID -> PROD , TEST , QUAL

	TRAINING ==>  SSID => DB9G

DBA =DATABASE ADMIN -> MEMORY ALLOCATION FOR DB2 ..

MAINFRAME	--> Z/OS	->  DASD	-> UNIT (SYSDA,SYSALDA)		-> VOLUMNS	--> DATASET(PDS/PS) --> DATA/PGM

DBA -> ALLOCATE THE VOLUMNS OF SPACE TO DB2 SOFTWARE	=CALLED > STORAGE GROUP

STROGE-GROUP -->  DATABASE  -- TABLESPACE/INDEX-SPACE	-> SCHEMA-NAME	-> TABLE/VIEW/INDEX (DB2 OBJECTS) -->  DATA 


1. SCHEMA.TABLENAME
2. SSID.SCHEMA.TABLENAME
3. PATH ->  SSID.DATABASE.TABLESPACE.SCHEMA.TABLE.DATA

====

DB2 - SOFTWARE = USING TO STORE AND RETRIVE THE DATA..
		
	TO COMMUNICATE WITH THE DB2 SOFTWare -- WE USE SQL


SQL	==> 4 TYPE STATEMENTS

		1. DDL ==> DATA DEFINATION LANG
			
			CREATE
			ALTER
			DROP
				1. USED TO DEFINE THE STURTURE OF THE OBJECT
				2. ADMIN ACCESS (WE DONT HAVE ACCESS TO CRETAE ANY TABLE IN THE PRJECT)

			IN CASE I NEED TO CREATE A DB2 TABLE FOR MY REQUEST OF USER>

				1. PREPARE THE EXCEL 0 COL , TYPE , RULES 
				2. RAISE A REQUEST TO DB2 DBA TEAM
				3. APPROVAL  
				4. DBA WIL CREATE A TABLE - TEST SYSTEM
				5. U CAN DO UR TESTING - DONE - IMPLEMENTING THE CHANGES
				
				6. ANOTHER REQUEST FOR PROD TABLE
				7. DBA - APPROVAL -- TEST -> PROD -- ACCESS AS REQUIRED


		2. DML --> DATA MANIPULATION LANG

			SELECT		-- RETRIVE THE DATA	***		
			INSERT		== ADD THE ROW
			UPDATE		== CHANGE
			DELETE		== REMOVE

		3. TCL  - TRANSACTION CONTROL LANG
			
			COMMIT		-- SAVE THE CHANGES
			ROLLBACK	== REVERT/UNDO THE CHANGES

			ANY QUERY PROCESS 1. PGM 2. JCL 3. TOOL
	
					IF SUCCESSUFL --> AUTO-COMMIT
					WHEN FAIL   	-> AUTO -ROLLBACK


		4. DCL -- DATA CONTROL LANG
			
			GRANT	== PROVIDE THE ACCESS
			REVOKE 	-- REMOVE THE ACCESS

			ADMIN = WORK

IF AM DEVELOPER/SUPORT 

		CREATE  -- INSERT - SELECT - UPDATE - DELETE -- COMMIT













